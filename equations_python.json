{
  "1": {
    "variable_ID": 2,
    "lhs": "one",
    "network": "root",
    "rhs": "np.ones(np.shape(value)), value"
  },
  "2": {
    "variable_ID": 3,
    "lhs": "zero",
    "network": "root",
    "rhs": "np.ones(np.shape(value)), value"
  },
  "3": {
    "variable_ID": 4,
    "lhs": "onehalf",
    "network": "root",
    "rhs": "np.ones(np.shape(value)), value"
  },
  "4": {
    "variable_ID": 6,
    "lhs": "to",
    "network": "root",
    "rhs": "np.ones(np.shape(t)), value"
  },
  "5": {
    "variable_ID": 7,
    "lhs": "te",
    "network": "root",
    "rhs": "np.ones(np.shape(t)), value"
  },
  "6": {
    "variable_ID": 17,
    "lhs": "p",
    "network": "physical",
    "rhs": "np.negative(ParDiff(U, V))"
  },
  "7": {
    "variable_ID": 18,
    "lhs": "T",
    "network": "physical",
    "rhs": "ParDiff(U, S)"
  },
  "8": {
    "variable_ID": 19,
    "lhs": "chemPot",
    "network": "physical",
    "rhs": "ParDiff(U, n)"
  },
  "9": {
    "variable_ID": 20,
    "lhs": "H",
    "network": "physical",
    "rhs": "np.subtract(U, np.multiply(p, V))"
  },
  "10": {
    "variable_ID": 21,
    "lhs": "A",
    "network": "physical",
    "rhs": "np.subtract(U, np.multiply(T, S))"
  },
  "11": {
    "variable_ID": 22,
    "lhs": "G",
    "network": "physical",
    "rhs": "np.subtract(np.add(U, np.multiply(p, V)), np.multiply(T, S))"
  },
  "14": {
    "variable_ID": 27,
    "lhs": "Ue",
    "network": "physical",
    "rhs": "np.multiply(np.reciprocal(charge), U)"
  },
  "15": {
    "variable_ID": 28,
    "lhs": "v_x",
    "network": "physical",
    "rhs": "ParDiff(r_x, t)"
  },
  "16": {
    "variable_ID": 29,
    "lhs": "v_y",
    "network": "physical",
    "rhs": "ParDiff(r_y, t)"
  },
  "17": {
    "variable_ID": 30,
    "lhs": "v_z",
    "network": "physical",
    "rhs": "ParDiff(r_z, t)"
  },
  "20": {
    "variable_ID": 41,
    "lhs": "_Mm",
    "network": "material >>> macroscopic",
    "rhs": "Mm"
  },
  "21": {
    "variable_ID": 42,
    "lhs": "Cp",
    "network": "material",
    "rhs": "ParDiff(H, T)"
  },
  "22": {
    "variable_ID": 43,
    "lhs": "Cv",
    "network": "material",
    "rhs": "ParDiff(U, T)"
  },
  "23": {
    "variable_ID": 44,
    "lhs": "kq_x",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.reciprocal(V), ParDiff(U, T)), v_x)"
  },
  "24": {
    "variable_ID": 45,
    "lhs": "kq_y",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.reciprocal(V), ParDiff(U, T)), v_y)"
  },
  "25": {
    "variable_ID": 46,
    "lhs": "kq_z",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.reciprocal(V), ParDiff(U, T)), v_z)"
  },
  "26": {
    "variable_ID": 47,
    "lhs": "kq",
    "network": "material",
    "rhs": "Stack(kq_x,kq_y,kq_z)"
  },
  "27": {
    "variable_ID": 48,
    "lhs": "kc_x",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.multiply((blockReduce(Mm, S, N_x_S, np.reciprocal(chemPot))), np.reciprocal(V)), ParDiff(U, p)), v_x)"
  },
  "28": {
    "variable_ID": 49,
    "lhs": "kc_y",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.multiply((blockReduce(Mm, S, N_x_S, np.reciprocal(chemPot))), np.reciprocal(V)), ParDiff(U, p)), v_y)"
  },
  "29": {
    "variable_ID": 50,
    "lhs": "kc_z",
    "network": "material",
    "rhs": "np.multiply(np.multiply(np.multiply((blockReduce(Mm, S, N_x_S, np.reciprocal(chemPot))), np.reciprocal(V)), ParDiff(U, p)), v_z)"
  },
  "30": {
    "variable_ID": 51,
    "lhs": "kc",
    "network": "material",
    "rhs": "Stack(kc_x,kc_y,kc_z)"
  },
  "31": {
    "variable_ID": 52,
    "lhs": "kd_x",
    "network": "material",
    "rhs": "np.multiply(np.reciprocal(chemPot), (khatriRao(v_x, [N], (khatriRao(np.reciprocal(V), [N], ParDiff(U, chemPot), [N_x_S])), [N_x_S])))"
  },
  "32": {
    "variable_ID": 53,
    "lhs": "kd_y",
    "network": "material",
    "rhs": "np.multiply(np.reciprocal(chemPot), (khatriRao(v_y, [N], (khatriRao(np.reciprocal(V), [N], ParDiff(U, chemPot), [N_x_S])), [N_x_S])))"
  },
  "33": {
    "variable_ID": 54,
    "lhs": "kd_z",
    "network": "material",
    "rhs": "np.multiply(np.reciprocal(chemPot), (khatriRao(v_z, [N], (khatriRao(np.reciprocal(V), [N], ParDiff(U, chemPot), [N_x_S])), [N_x_S])))"
  },
  "34": {
    "variable_ID": 55,
    "lhs": "kd",
    "network": "material",
    "rhs": "Stack(kd_x,kd_y,kd_z)"
  },
  "35": {
    "variable_ID": 56,
    "lhs": "h",
    "network": "material",
    "rhs": "khatriRao(H, [N], np.reciprocal(n), [N_x_S])"
  },
  "36": {
    "variable_ID": 57,
    "lhs": "m",
    "network": "macroscopic",
    "rhs": "blockReduce(_Mm, S, N_x_S, n)"
  },
  "37": {
    "variable_ID": 58,
    "lhs": "_m",
    "network": "macroscopic >>> material",
    "rhs": "m"
  },
  "38": {
    "variable_ID": 59,
    "lhs": "density",
    "network": "material",
    "rhs": "np.multiply(_m, np.reciprocal(V))"
  },
  "39": {
    "variable_ID": 60,
    "lhs": "T_NK",
    "network": "reactions",
    "rhs": "np.dot(np.transpose(P_N_NK), T)"
  },
  "41": {
    "variable_ID": 62,
    "lhs": "Ea",
    "network": "reactions",
    "rhs": "np.ones(np.shape(np.multiply(GasConstant, T_NK))), value"
  },
  "42": {
    "variable_ID": 63,
    "lhs": "K_NK",
    "network": "reactions",
    "rhs": "khatriRao(Ko, [K], np.exp(np.multiply(np.negative(Ea), np.reciprocal(np.multiply(GasConstant, T_NK)))), [N_x_K])"
  },
  "44": {
    "variable_ID": 66,
    "lhs": "c",
    "network": "macroscopic",
    "rhs": "khatriRao(np.reciprocal(V), [N], n, [N_x_S])"
  },
  "45": {
    "variable_ID": 67,
    "lhs": "_c",
    "network": "macroscopic >>> reactions",
    "rhs": "c"
  },
  "48": {
    "variable_ID": 71,
    "lhs": "Ayz",
    "network": "macroscopic",
    "rhs": "np.multiply(r_y, r_z)"
  },
  "49": {
    "variable_ID": 72,
    "lhs": "Axz",
    "network": "macroscopic",
    "rhs": "np.multiply(r_x, r_z)"
  },
  "50": {
    "variable_ID": 73,
    "lhs": "Axy",
    "network": "macroscopic",
    "rhs": "np.multiply(r_x, r_y)"
  },
  "51": {
    "variable_ID": 74,
    "lhs": "_density",
    "network": "material >>> macroscopic",
    "rhs": "density"
  },
  "52": {
    "variable_ID": 75,
    "lhs": "_h",
    "network": "material >>> macroscopic",
    "rhs": "h"
  },
  "53": {
    "variable_ID": 76,
    "lhs": "_kq_x",
    "network": "material >>> macroscopic",
    "rhs": "kq_x"
  },
  "54": {
    "variable_ID": 77,
    "lhs": "_Cv",
    "network": "material >>> macroscopic",
    "rhs": "Cv"
  },
  "55": {
    "variable_ID": 78,
    "lhs": "_kq_y",
    "network": "material >>> macroscopic",
    "rhs": "kq_y"
  },
  "56": {
    "variable_ID": 79,
    "lhs": "_kq_z",
    "network": "material >>> macroscopic",
    "rhs": "kq_z"
  },
  "57": {
    "variable_ID": 80,
    "lhs": "_kq",
    "network": "material >>> macroscopic",
    "rhs": "kq"
  },
  "58": {
    "variable_ID": 81,
    "lhs": "_kc_x",
    "network": "material >>> macroscopic",
    "rhs": "kc_x"
  },
  "59": {
    "variable_ID": 82,
    "lhs": "_Cp",
    "network": "material >>> macroscopic",
    "rhs": "Cp"
  },
  "60": {
    "variable_ID": 83,
    "lhs": "_kc_y",
    "network": "material >>> macroscopic",
    "rhs": "kc_y"
  },
  "61": {
    "variable_ID": 84,
    "lhs": "_kc_z",
    "network": "material >>> macroscopic",
    "rhs": "kc_z"
  },
  "62": {
    "variable_ID": 85,
    "lhs": "_kc",
    "network": "material >>> macroscopic",
    "rhs": "kc"
  },
  "63": {
    "variable_ID": 86,
    "lhs": "_kd_x",
    "network": "material >>> macroscopic",
    "rhs": "kd_x"
  },
  "64": {
    "variable_ID": 87,
    "lhs": "_kd_y",
    "network": "material >>> macroscopic",
    "rhs": "kd_y"
  },
  "65": {
    "variable_ID": 88,
    "lhs": "_kd_z",
    "network": "material >>> macroscopic",
    "rhs": "kd_z"
  },
  "66": {
    "variable_ID": 89,
    "lhs": "_kd",
    "network": "material >>> macroscopic",
    "rhs": "kd"
  },
  "67": {
    "variable_ID": 92,
    "lhs": "fV",
    "network": "macroscopic",
    "rhs": "np.dot(np.transpose(np.multiply(np.multiply(np.multiply(np.reciprocal(_density), _kc_x), Ayz), D)), p)"
  },
  "68": {
    "variable_ID": 93,
    "lhs": "fnd_AS",
    "network": "macroscopic",
    "rhs": "np.dot(np.transpose(np.multiply(khatriRao(Ayz, [N], np.negative(_kd_x), [N_x_S]), D_NS_AS)), chemPot)"
  },
  "69": {
    "variable_ID": 94,
    "lhs": "fnd",
    "network": "macroscopic",
    "rhs": "np.dot(F_NS_AS, fnd_AS)"
  },
  "70": {
    "variable_ID": 95,
    "lhs": "fHd_A",
    "network": "macroscopic",
    "rhs": "blockReduce((np.dot(np.transpose(F_NS_AS), _h)), S, A_x_S, fnd_AS)"
  },
  "71": {
    "variable_ID": 96,
    "lhs": "fHd",
    "network": "macroscopic",
    "rhs": "np.dot(F_N_A, fHd_A)"
  },
  "72": {
    "variable_ID": 97,
    "lhs": "d",
    "network": "macroscopic",
    "rhs": "np.sign(np.dot(np.transpose(F_N_A), p))"
  },
  "73": {
    "variable_ID": 98,
    "lhs": "c_AS",
    "network": "macroscopic",
    "rhs": "np.dot(np.transpose((np.multiply(onehalf, (np.subtract(F_NS_AS, khatriRao(d, [A], np.abs(F_NS_AS ), [N_x_S, A_x_S])))))), c)"
  },
  "74": {
    "variable_ID": 99,
    "lhs": "fnc_AS",
    "network": "macroscopic",
    "rhs": "khatriRao(fV, [A], c_AS, [A_x_S])"
  },
  "75": {
    "variable_ID": 100,
    "lhs": "fnc",
    "network": "macroscopic",
    "rhs": "np.dot(F_NS_AS, fnc_AS)"
  },
  "76": {
    "variable_ID": 101,
    "lhs": "dndt",
    "network": "macroscopic",
    "rhs": "np.add(np.add(fnc, fnd), _nProd)"
  },
  "77": {
    "variable_ID": 102,
    "lhs": "fHc_A",
    "network": "macroscopic",
    "rhs": "blockReduce((np.dot(np.transpose(F_NS_AS), _h)), S, A_x_S, fnc_AS)"
  },
  "78": {
    "variable_ID": 103,
    "lhs": "fHc",
    "network": "macroscopic",
    "rhs": "np.dot(F_N_A, fHc_A)"
  },
  "79": {
    "variable_ID": 104,
    "lhs": "fw_A",
    "network": "macroscopic",
    "rhs": "np.ones(np.shape(fHc_A)), value"
  },
  "80": {
    "variable_ID": 105,
    "lhs": "fw",
    "network": "macroscopic",
    "rhs": "np.dot(F_N_A, fw_A)"
  },
  "81": {
    "variable_ID": 106,
    "lhs": "fq_A_x",
    "network": "macroscopic",
    "rhs": "np.dot(np.transpose(np.multiply(np.multiply(Ayz, _kq_x), D)), T)"
  },
  "82": {
    "variable_ID": 107,
    "lhs": "fq",
    "network": "macroscopic",
    "rhs": "np.dot(F_N_A, fq_A_x)"
  },
  "83": {
    "variable_ID": 108,
    "lhs": "dHdt",
    "network": "macroscopic",
    "rhs": "np.add(np.add(np.add(fHc, fHd), fq), fw)"
  },
  "84": {
    "variable_ID": 109,
    "lhs": "Ho",
    "network": "macroscopic",
    "rhs": "np.ones(np.shape(H)), value"
  },
  "85": {
    "variable_ID": 110,
    "lhs": "no",
    "network": "macroscopic",
    "rhs": "np.ones(np.shape(n)), value"
  },
  "86": {
    "variable_ID": 16,
    "lhs": "n",
    "network": "macroscopic",
    "rhs": "np.add(Integral(dndt,t,to,te), no)"
  },
  "87": {
    "variable_ID": 20,
    "lhs": "H",
    "network": "macroscopic",
    "rhs": "Integral(dHdt,t,to,te)"
  },
  "88": {
    "variable_ID": 112,
    "lhs": "additive",
    "network": "material",
    "rhs": "np.ones(np.shape(additive)), value"
  },
  "89": {
    "variable_ID": 113,
    "lhs": "i",
    "network": "macroscopic",
    "rhs": "TotalDiff(charge, t)"
  },
  "90": {
    "variable_ID": 114,
    "lhs": "_i",
    "network": "macroscopic >>> material",
    "rhs": "i"
  },
  "91": {
    "variable_ID": 115,
    "lhs": "elResist",
    "network": "material",
    "rhs": "np.multiply(np.reciprocal(_i), Ue)"
  },
  "92": {
    "variable_ID": 115,
    "lhs": "elResist",
    "network": "material",
    "rhs": "np.ones(np.shape(elResist)), value"
  },
  "93": {
    "variable_ID": 116,
    "lhs": "elConductC",
    "network": "material",
    "rhs": "np.multiply(np.reciprocal(elResist), additive)"
  },
  "94": {
    "variable_ID": 117,
    "lhs": "_elConductC",
    "network": "material >>> macroscopic",
    "rhs": "elConductC"
  },
  "95": {
    "variable_ID": 27,
    "lhs": "Ue",
    "network": "macroscopic",
    "rhs": "np.multiply(np.reciprocal(_elConductC), i)"
  },
  "96": {
    "variable_ID": 118,
    "lhs": "dUedt",
    "network": "macroscopic",
    "rhs": "np.multiply(one, Ue)"
  },
  "97": {
    "variable_ID": 118,
    "lhs": "dUedt",
    "network": "macroscopic",
    "rhs": "Root(Ue)"
  },
  "98": {
    "variable_ID": 118,
    "lhs": "dUedt",
    "network": "macroscopic",
    "rhs": "np.ones(np.shape(dUedt)), zero"
  },
  "99": {
    "variable_ID": 119,
    "lhs": "_i",
    "network": "macroscopic >>> control",
    "rhs": "i"
  },
  "104": {
    "variable_ID": 124,
    "lhs": "_additive",
    "network": "material >>> control",
    "rhs": "additive"
  },
  "105": {
    "variable_ID": 125,
    "lhs": "_T",
    "network": "macroscopic >>> control",
    "rhs": "T"
  },
  "106": {
    "variable_ID": 126,
    "lhs": "intensities",
    "network": "macroscopic",
    "rhs": "MixedStack(p,T,chemPot,c,Ue)"
  },
  "107": {
    "variable_ID": 128,
    "lhs": "nTotal",
    "network": "macroscopic",
    "rhs": "blockReduce(one_S, S, N_x_S, n)"
  },
  "108": {
    "variable_ID": 135,
    "lhs": "e",
    "network": "control",
    "rhs": "np.subtract(meas, setPoint)"
  },
  "109": {
    "variable_ID": 137,
    "lhs": "xo",
    "network": "control",
    "rhs": "np.ones(np.shape(x)), value"
  },
  "110": {
    "variable_ID": 138,
    "lhs": "dxdt",
    "network": "control",
    "rhs": "np.add(np.dot(np.transpose(A), x), np.dot(np.transpose(B), e))"
  },
  "111": {
    "variable_ID": 136,
    "lhs": "x",
    "network": "control",
    "rhs": "Integral(np.dot(I_N_D, dxdt),t,to,te)"
  },
  "112": {
    "variable_ID": 140,
    "lhs": "_additive",
    "network": "material >>> macroscopic",
    "rhs": "additive"
  },
  "113": {
    "variable_ID": 141,
    "lhs": "Imeasured",
    "network": "control",
    "rhs": "_i"
  },
  "114": {
    "variable_ID": 142,
    "lhs": "_Ue",
    "network": "macroscopic >>> control",
    "rhs": "Ue"
  },
  "115": {
    "variable_ID": 143,
    "lhs": "UeMeasured",
    "network": "control",
    "rhs": "_Ue"
  },
  "116": {
    "variable_ID": 144,
    "lhs": "addMeasured",
    "network": "control",
    "rhs": "_additive"
  },
  "117": {
    "variable_ID": 145,
    "lhs": "RComputed",
    "network": "control",
    "rhs": "np.multiply(np.reciprocal(Imeasured), UeMeasured)"
  },
  "118": {
    "variable_ID": 146,
    "lhs": "store",
    "network": "control",
    "rhs": "MixedStack(Imeasured,UeMeasured,RComputed,addMeasured)"
  },
  "119": {
    "variable_ID": 133,
    "lhs": "setPoint",
    "network": "control",
    "rhs": "np.ones(np.shape(setPoint)), value"
  },
  "123": {
    "variable_ID": 151,
    "lhs": "c",
    "network": "reactions",
    "rhs": "np.multiply(P_NK, (np.dot(np.transpose(P_NS_KS), _c)))"
  },
  "124": {
    "variable_ID": 152,
    "lhs": "co",
    "network": "reactions",
    "rhs": "np.ones(np.shape(c)), value"
  },
  "125": {
    "variable_ID": 153,
    "lhs": "x",
    "network": "reactions",
    "rhs": "np.multiply(np.reciprocal(co), c)"
  },
  "126": {
    "variable_ID": 154,
    "lhs": "y",
    "network": "control",
    "rhs": "np.add(np.dot(np.transpose(C), x), np.multiply(D, e))"
  },
  "127": {
    "variable_ID": 157,
    "lhs": "GasConstant",
    "network": "reactions",
    "rhs": "np.multiply(Avogadro, Boltzmann)"
  },
  "128": {
    "variable_ID": 159,
    "lhs": "N_NK_KS",
    "network": "reactions",
    "rhs": "np.dot(np.transpose(P_K_NK), N_K_KS)"
  },
  "129": {
    "variable_ID": 160,
    "lhs": "phi",
    "network": "reactions",
    "rhs": "Product( np.power(x, N_NK_KS) \\, K_x_S )"
  },
  "130": {
    "variable_ID": 163,
    "lhs": "nProd",
    "network": "reactions",
    "rhs": "np.transpose(np.dot(np.transpose(V), (np.dot(P_N_NK, np.transpose((np.multiply(np.transpose((np.multiply(K_NK, phi))), (np.dot(P_NS_KS, np.transpose(N_NK_KS))))))))))"
  },
  "131": {
    "variable_ID": 164,
    "lhs": "_nProd",
    "network": "reactions >>> macroscopic",
    "rhs": "nProd"
  },
  "132": {
    "variable_ID": 165,
    "lhs": "boz",
    "network": "physical",
    "rhs": "np.ones(np.shape(S)), value"
  },
  "133": {
    "variable_ID": 166,
    "lhs": "R",
    "network": "physical",
    "rhs": "np.multiply(Avogadro, boz)"
  },
  "134": {
    "variable_ID": 168,
    "lhs": "nt",
    "network": "macroscopic",
    "rhs": "blockReduce(one_S, S, N_x_S, n)"
  },
  "135": {
    "variable_ID": 169,
    "lhs": "xi",
    "network": "macroscopic",
    "rhs": "khatriRao(np.reciprocal(nt), [N], n, [N_x_S])"
  },
  "136": {
    "variable_ID": 19,
    "lhs": "chemPot",
    "network": "macroscopic",
    "rhs": "khatriRao((np.multiply(R, T)), [N], np.log(xi), [N_x_S])"
  },
  "137": {
    "variable_ID": 170,
    "lhs": "nProd",
    "network": "macroscopic",
    "rhs": "_nProd"
  },
  "138": {
    "variable_ID": 171,
    "lhs": "switch",
    "network": "control",
    "rhs": "np.multiply(onehalf, (np.add(one, np.sign(to))))"
  },
  "139": {
    "variable_ID": 172,
    "lhs": "_switch",
    "network": "control >>> macroscopic",
    "rhs": "switch"
  },
  "140": {
    "variable_ID": 92,
    "lhs": "fV",
    "network": "macroscopic",
    "rhs": "np.ones(np.shape(fV)), value"
  },
  "141": {
    "variable_ID": 173,
    "lhs": "fnc_AS_controlled",
    "network": "macroscopic",
    "rhs": "np.multiply(_switch, fnc_AS)"
  },
  "142": {
    "variable_ID": 101,
    "lhs": "dndt",
    "network": "macroscopic",
    "rhs": "np.dot(F_NS_AS, Stack(fnc_AS,fnc_AS_controlled))"
  }
}